#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
doctest pyrecsys.datasets.load_movielens100k

>>> from pyrecsys.datasets import load_movielens_mini
>>> data = load_movielens_mini()
>>> print vars(data)
{'event_otypes': array([0, 1]), 'n_otypes': 2, 'n_events': 30, 'feature': array([ [(24, 0, 19, '85711') (53, 1, 1, '94043') (33, 1, 1, '15213')
 (42, 0, 8, '98101') (57, 0, 2, '91344') (36, 0, 2, '05201')
 (29, 0, 18, '01002') (53, 0, 11, '90703')],
       [ ('Toy Story (1995)', (1, 1, 1995), [0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'http://us.imdb.com/M/title-exact?Toy%20Story%20(1995)')
 ('GoldenEye (1995)', (1, 1, 1995), [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0], 'http://us.imdb.com/M/title-exact?GoldenEye%20(1995)')
 ('Four Rooms (1995)', (1, 1, 1995), [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0], 'http://us.imdb.com/M/title-exact?Four%20Rooms%20(1995)')
 ('Get Shorty (1995)', (1, 1, 1995), [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'http://us.imdb.com/M/title-exact?Get%20Shorty%20(1995)')
 ('Copycat (1995)', (1, 1, 1995), [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0], 'http://us.imdb.com/M/title-exact?Copycat%20(1995)')
 ('Shanghai Triad (Yao a yao yao dao waipo qiao) (1995)', (1, 1, 1995), [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'http://us.imdb.com/Title?Yao+a+yao+yao+dao+waipo+qiao+(1995)')
 ('Twelve Monkeys (1995)', (1, 1, 1995), [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0], 'http://us.imdb.com/M/title-exact?Twelve%20Monkeys%20(1995)')
 ('Babe (1995)', (1, 1, 1995), [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'http://us.imdb.com/M/title-exact?Babe%20(1995)')
 ('Dead Man Walking (1995)', (1, 1, 1995), [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'http://us.imdb.com/M/title-exact?Dead%20Man%20Walking%20(1995)')
 ('Richard III (1995)', (22, 1, 1996), [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0], 'http://us.imdb.com/M/title-exact?Richard%20III%20(1995)')]], dtype=object), 'event': array([[2, 1],
       [7, 6],
       [2, 0],
       [7, 3],
       [0, 5],
       [4, 9],
       [4, 7],
       [6, 5],
       [4, 6],
       [5, 6],
       [0, 9],
       [7, 0],
       [0, 8],
       [0, 1],
       [1, 0],
       [0, 7],
       [0, 0],
       [1, 9],
       [0, 4],
       [3, 6],
       [4, 3],
       [3, 0],
       [4, 8],
       [0, 3],
       [3, 8],
       [0, 6],
       [6, 6],
       [0, 2],
       [3, 7],
       [7, 8]]), 'iid': array([{1: 0, 2: 1, 5: 2, 6: 3, 7: 4, 8: 5, 9: 6, 10: 7},
       {1: 0, 2: 1, 3: 2, 4: 3, 5: 4, 6: 5, 7: 6, 8: 7, 9: 8, 10: 9}], dtype=object), 'event_feature': array([(875636053,), (877892210,), (875635748,), (877889130,),
       (887431973,), (891352864,), (891351328,), (886960055,),
       (891352220,), (879362287,), (875693118,), (877888877,),
       (878543541,), (876893171,), (888550871,), (875072484,),
       (874965758,), (888551853,), (889751712,), (883599102,),
       (891351772,), (883599478,), (891351432,), (876893119,),
       (883599205,), (875071561,), (886960030,), (878542960,),
       (883600657,), (877889005,)], 
      dtype=[('timesamp', '<i8')]), 'score': array([ 3.,  4.,  4.,  4.,  5.,  4.,  5.,  5.,  5.,  3.,  3.,  4.,  5.,
        3.,  4.,  1.,  5.,  2.,  3.,  2.,  5.,  4.,  5.,  3.,  4.,  4.,
        4.,  4.,  4.,  4.]), 'eid': array([[ 1  2  5  6  7  8  9 10], [ 1  2  3  4  5  6  7  8  9 10]], dtype=object), 'n_objects': array([ 8, 10]), 'n_stypes': 1, 's_event': 2, 'score_domain': (1.0, 5.0)}
 """

import doctest
doctest.testmod()
